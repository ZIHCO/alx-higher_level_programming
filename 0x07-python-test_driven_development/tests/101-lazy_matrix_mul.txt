Doctest for lazy_matrix_mul
===========================
lazy_matrix_mul contains the definition, lazy_matrix_mul.

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


check if list of lists:
-----------------------
>>> lazy_matrix_mul([[]], [[3,4,5]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[3,4,5]], [[]])
Traceback (most recent call last):
	...
ValueError: m_b can't be empty

check if entry are number that are castable to int:
---------------------------------------------------
>>> lazy_matrix_mul([[float('nan',)], [9], [10]], [[3,4,5]])
Traceback (most recent call last):
	...
ValueError: m_a contains NaN

>>> lazy_matrix_mul([[-(float('inf',))], [9], [10]], [[3,4,5]])
Traceback (most recent call last):
	...
ValueError: m_a contains infinity

check that m_a and m_b are non-empty:
-------------------------------------
>>> lazy_matrix_mul([[float('1',)], [9], [10]], [[3,4,5]])
array([[ 3.,  4.,  5.],
       [27., 36., 45.],
       [30., 40., 50.]])

check return type:
------------------
>>> type(lazy_matrix_mul([[float('1',)], [9], [10]], [[3,4,5]]))
<class 'numpy.ndarray'>

>>> lazy_matrix_mul([[float('1',)], ['i'], [10]], [[3,4,5]])
Traceback (most recent call last):
	...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul('school', [[3,4,5]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list
