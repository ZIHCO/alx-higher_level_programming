Doctest for lazy_matrix_mul
===========================
lazy_matrix_mul contains the definition, lazy_matrix_mul.

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


check for docstring:
--------------------
>>> m = __import__('101-lazy_matrix_mul').__doc__
>>> len(m) > 1
True

>>> m = __import__('101-lazy_matrix_mul').lazy_matrix_mul.__doc__
>>> len(m) > 1
True

check if list of lists:
-----------------------
>>> lazy_matrix_mul([[]], [[3,4,5]])
Traceback (most recent call last):
	...
ValueError: shapes (1,0) and (1,3) not aligned: 0 (dim 1) != 1 (dim 0)

>>> lazy_matrix_mul([[3,4,5]], [[]])
Traceback (most recent call last):
	...
ValueError: shapes (1,3) and (1,0) not aligned: 3 (dim 1) != 1 (dim 0)

check if entry are number that are castable to int:
---------------------------------------------------
>>> lazy_matrix_mul([[float('nan',)], [9], [10]], [[3,4,5]])
array([[nan, nan, nan],
       [27., 36., 45.],
       [30., 40., 50.]])

>>> lazy_matrix_mul([[-(float('inf',))], [9], [10]], [[3,4,5]])
array([[-inf, -inf, -inf],
       [ 27.,  36.,  45.],
       [ 30.,  40.,  50.]])

check that m_a and m_b are non-empty:
-------------------------------------
>>> lazy_matrix_mul([[float('1',)], [9], [10]], [[3,4,5]])
array([[ 3.,  4.,  5.],
       [27., 36., 45.],
       [30., 40., 50.]])

check return type:
------------------
>>> type(lazy_matrix_mul([[float('1',)], [9], [10]], [[3,4,5]]))
<class 'numpy.ndarray'>

>>> lazy_matrix_mul([[float('1',)], ['i'], [10]], [[3,4,5]])
Traceback (most recent call last):
	...
ValueError: data type must provide an itemsize

>>> lazy_matrix_mul('school', [[3,4,5]])
Traceback (most recent call last):
	...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U6'), dtype('<U1')) -> None

>>> lazy_matrix_mul([[3,4,5]], 'school')
Traceback (most recent call last):
	...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U1'), dtype('<U6')) -> None

>>> ma = [[1, 2], [3, 4], [3, 4]]
>>> mb = [[5, 6, 1], [7, 8, 2]]
>>> lazy_matrix_mul(ma, mb)
array([[19, 22,  5],
       [43, 50, 11],
       [43, 50, 11]])

>>> lazy_matrix_mul()
Traceback (most recent call last):
        ...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> ma = [[5, 6, 10], [7, 8]] 
>>> mb = [[5, 6], [7, 8]]
>>> lazy_matrix_mul(ma, mb)
Traceback (most recent call last):
	...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.
